import telebot
from config import TOKEN
from question import Question
from pathlib import Path
import yaml
from random import choice

bot = telebot.TeleBot(TOKEN)

START_MESSAGE = ("üöâ *–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å!*\n\n–°–µ–≥–æ–¥–Ω—è –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –ø—Ä–æ–π—Ç–∏ –∫–≤–∏–∑, –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—Ä–∏–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ "
                 "–∂–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω–æ–≥–æ –≤–æ–∫–∑–∞–ª–∞ –≤ –ü–µ—Ä–º–∏ - –ü–µ—Ä–º—å II.\n–û–Ω –∏–º–µ–µ—Ç –±–æ–≥–∞—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é –∏ –∏–≥—Ä–∞–µ—Ç –≤–∞–∂–Ω—É—é —Ä–æ–ª—å –≤ "
                 "—Ä–∞–∑–≤–∏—Ç–∏–∏ –∂–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –≤ —Ä–µ–≥–∏–æ–Ω–µ.\n–í–∞—Å –∂–¥—É—Ç 10 –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å "
                 "–Ω–∞—Å–∫–æ–ª—å–∫–æ –≤—ã —É—Å–≤–æ–∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n–û—Ü–µ–Ω–∫–∞ –∑–∞ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –±—É–¥–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö "
                 "—Ä–µ—à–µ–Ω–∏–π:\n\nü•â 1-4 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞ - _–æ—Ü–µ–Ω–∫–∞ 2_\nü•à 5-6 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ - _–æ—Ü–µ–Ω–∫–∞ 3_\nü•á 7-8 "
                 "–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ - _–æ—Ü–µ–Ω–∫–∞ 4_\nüèÜ 9-10 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ - _–æ—Ü–µ–Ω–∫–∞ 5_\n\n–ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å "
                 "—Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ –≤–æ–∫–∑–∞–ª–µ *–ü–µ—Ä–º—å II*?\n–¢–æ–≥–¥–∞ –¥–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º! üåü")

AUTHORIZED_USERS = []
STARTED_QUIZ_USERS = {}

QUESTIONS = {q['id']: Question(q['id'], q['q'], q['a']) for q in
             yaml.load(Path('questions.yaml').read_text(encoding='utf-8'), Loader=yaml.FullLoader)}


@bot.message_handler(commands=['start'])
def start_message(message):
    user_id = message.chat.id
    if user_id not in AUTHORIZED_USERS:
        print(f'User {user_id} started the bot')
        AUTHORIZED_USERS.append(user_id)
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton(text="üß† –ù–∞—á–∞—Ç—å –∫–≤–∏–∑!", callback_data="start"))
        bot.send_message(user_id, START_MESSAGE, reply_markup=keyboard, parse_mode="Markdown")
    else:
        bot.send_message(user_id, "–í—ã —É–∂–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞")


@bot.message_handler(commands=['restart_quiz'])
def restart_message(message):
    user_id = message.chat.id
    if user_id not in AUTHORIZED_USERS:
        bot.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å")
        return
    STARTED_QUIZ_USERS[user_id] = {'questions': list(QUESTIONS.keys()),
                                   'correct_answers': 0,
                                   'answers': {},
                                   'current_question': None,
                                   'current_q_num': 1}
    print(f'User {user_id} restarted the quiz')
    bot.send_message(user_id, "–ù–∞—á–∏–Ω–∞–µ–º –∫–≤–∏–∑ –∑–∞–Ω–æ–≤–æ...")
    if len(STARTED_QUIZ_USERS[user_id]['questions']) > 0:
        question_id = choice(STARTED_QUIZ_USERS[user_id]['questions'])
        STARTED_QUIZ_USERS[user_id]['current_question'] = question_id
        question = QUESTIONS[question_id]
        keyboard = telebot.types.InlineKeyboardMarkup()
        buts = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£']
        row = []
        for i in range(len(question.answers)):
            row.append(telebot.types.InlineKeyboardButton(text=buts[i], callback_data=f'a_{i + 1}'))
        keyboard.row(*row)
        out_message = (f"*–í–æ–ø—Ä–æ—Å ‚Ññ{STARTED_QUIZ_USERS[user_id]['current_q_num']}*.\n\n{question.text}\n\n–í–∞—Ä–∏–∞–Ω—Ç—ã "
                       f"–æ—Ç–≤–µ—Ç–∞:\n") + \
                      '\n'.join([f"{i + 1}. {question.answers[i]}" for i in range(len(question.answers))])
        bot.send_message(user_id, out_message, reply_markup=keyboard, parse_mode="Markdown")


@bot.callback_query_handler(func=lambda call: True)
def handle_call(call):
    user_id = call.message.chat.id
    message_id = call.message.message_id
    if user_id not in AUTHORIZED_USERS:
        return
    if call.data == 'start':
        if user_id not in STARTED_QUIZ_USERS:
            STARTED_QUIZ_USERS[user_id] = {'questions': list(QUESTIONS.keys()),
                                           'correct_answers': 0,
                                           'answers': {},
                                           'current_question': None,
                                           'current_q_num': 1}
            print(f'User {user_id} started the quiz')
            bot.edit_message_reply_markup(user_id, message_id, reply_markup=None)

    if call.data in [f'a_{'123456789'[i]}' for i in range(9)]:
        answer_id = int(call.data[2:]) - 1
        question_id = STARTED_QUIZ_USERS[user_id]['current_question']
        question = QUESTIONS[question_id]
        if answer_id < len(question.answers):
            STARTED_QUIZ_USERS[user_id]['answers'][question_id] = answer_id
            if answer_id == question.correct:
                print(f'User {user_id} answered correctly')
                STARTED_QUIZ_USERS[user_id]['correct_answers'] += 1

    if len(STARTED_QUIZ_USERS[user_id]['questions']) > 0:
        question_id = choice(STARTED_QUIZ_USERS[user_id]['questions'])
        STARTED_QUIZ_USERS[user_id]['current_question'] = question_id
        question = QUESTIONS[question_id]
        keyboard = telebot.types.InlineKeyboardMarkup()
        buts = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£']
        row = []
        for i in range(len(question.answers)):
            row.append(telebot.types.InlineKeyboardButton(text=buts[i], callback_data=f'a_{i + 1}'))
        keyboard.row(*row)
        out_message = f"*–í–æ–ø—Ä–æ—Å ‚Ññ{STARTED_QUIZ_USERS[user_id]['current_q_num']}*.\n\n{question.text}\n\n–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:\n" + \
                      '\n'.join([f"{i + 1}. {question.answers[i]}" for i in range(len(question.answers))])
        if call.data == 'start':
            bot.send_message(user_id, out_message, reply_markup=keyboard, parse_mode="Markdown")
        elif call.data in [f'a_{'123456789'[i]}' for i in range(9)]:
            bot.edit_message_text(out_message, user_id, message_id, reply_markup=keyboard, parse_mode="Markdown")

        STARTED_QUIZ_USERS[user_id]['current_q_num'] += 1
        STARTED_QUIZ_USERS[user_id]['questions'].remove(question_id)
    else:
        correct_answers = STARTED_QUIZ_USERS[user_id]['correct_answers']
        match correct_answers:
            case 1 | 2 | 3 | 4:
                grade = 2
                grade_txt = "ü•â\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø–ª–æ—Ö–æ –∑–Ω–∞–∫–æ–º—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π –ü–µ—Ä–º–∏ II, –≤ –∫–∞–Ω–∞–ª–µ [–ü–µ—Ä–º—å 2 | –ò—Å—Ç–æ—Ä–∏—è –°—Ç–∞–Ω—Ü–∏–∏](https://t.me/perm2_zaimka) –µ—Å—Ç—å –º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏! –î–µ—Ä–∑–∞–π—Ç–µ!"
            case 5 | 6:
                grade = 3
                grade_txt = "ü•à\n–í—ã... –º–æ–ª–æ–¥–µ—Ü. –ù–æ, –º—ã –≤–µ—Ä–∏–º, –≤—ã —Å–º–æ–∂–µ—Ç–µ –±–æ–ª—å—à–µ.\n–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª [–ü–µ—Ä–º—å 2 | –ò—Å—Ç–æ—Ä–∏—è –°—Ç–∞–Ω—Ü–∏–∏](https://t.me/perm2_zaimka), –∏–∑—É—á–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –ª—É—á—à–µ"
            case 7 | 8:
                grade = 4
                grade_txt = "ü•á\n–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!\n–í—ã —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–∫–æ–º—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π –ü–µ—Ä–º–∏ II, –Ω–æ –Ω–µ–º–Ω–æ–∂–∫–æ –≤—Å–µ-—Ç–∞–∫–∏ –Ω–µ –¥–æ—Ç—è–Ω—É–ª–∏.\n–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª [–ü–µ—Ä–º—å 2 | –ò—Å—Ç–æ—Ä–∏—è –°—Ç–∞–Ω—Ü–∏–∏](https://t.me/perm2_zaimka) –¥–æ–±–∏—Ä–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å!"
            case 9 | 10:
                grade = 5
                grade_txt = "üèÜ\n–¢—Ä–æ–µ–∫—Ä–∞—Ç–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∏–¥–µ–∞–ª—å–Ω–æ –∑–Ω–∞–µ—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –ü–µ—Ä–º–∏ II.\n–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ—Å–≤–µ–∂–∏—Ç—å –≤ –ø–∞–º—è—Ç–∏ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª [–ü–µ—Ä–º—å 2 | –ò—Å—Ç–æ—Ä–∏—è –°—Ç–∞–Ω—Ü–∏–∏](https://t.me/perm2_zaimka)!"
        del STARTED_QUIZ_USERS[user_id]
        bot.delete_message(user_id, message_id)
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(telebot.types.InlineKeyboardButton(text="üß† –ù–∞—á–∞—Ç—å –∫–≤–∏–∑ –∑–∞–Ω–æ–≤–æ!", callback_data="start"))
        bot.send_message(user_id, f"{grade_txt}\n\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {correct_answers}\n\n*–û—Ü–µ–Ω–∫–∞: {grade}*",
                         reply_markup=keyboard, parse_mode="Markdown")
        print(f'User {user_id} finished the quiz')


bot.polling(none_stop=True)
